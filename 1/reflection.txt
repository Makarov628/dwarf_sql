2) Зачем то сделал LEFT JOIN для сквадов, возможно чтобы проверить реально ли есть связь.
Ваше решение проще. (и почему я сразу об этом не подумал...)

3) Решил что максимальный priority для меня будет 3.
Получилось без вложенного запроса.

5) Сначала сделал также как у вас, но у меня не отображалось количество дварфов без отряда.
(возможно обычный INNER JOIN использовал сначала).
Поступил иначе, сначала пробегаюсь по всем дварфам и подтягиваю уже таблицу с отрядами.
Если результата нет, то сделать красивую надпись 'No Squads'

8) Поскольку я пишу запросы на T-SQL (Sql Server) есть такой механизм HAVING, он используется вместе с GROUP BY.
Поэтому сделал через LEFT JOIN и HAVING. Возможно все таки ваше решение с вложенными запросами лучше.
Буду рад если вы дополнительно расскажите про разницу в производительности между вложенными запросами и использованием JOIN'ов.

В целом я почему-то стесняюсь использовать вложенные запросы
и предпочитаю джоины, хотя возможно они избыточные.
Например в ClickHouse каждый новый JOIN критично сказывается на времени выполнения запроса.
Окей, теперь буду использовать вложенные запросы чаще.

Я также переименовал файлы из предыдущего решения (нумерацию добавил файлам)
Поэтому прикрепляю также обновленные ссылки на решения (ничего не исправлял)

1) https://github.com/Makarov628/dwarf_sql/blob/main/1/1)%20Dwarfs%20and%20squads.sql

2) https://github.com/Makarov628/dwarf_sql/blob/main/1/2)%20Miner%20without%20squad.sql

3) https://github.com/Makarov628/dwarf_sql/blob/main/1/3)%20High%20priority%20pending%20tasks.sql

4) https://github.com/Makarov628/dwarf_sql/blob/main/1/4)%20Count%20items%20by%20owner.sql

5) https://github.com/Makarov628/dwarf_sql/blob/main/1/5)%20Count%20dwarves%20in%20squads.sql

6) https://github.com/Makarov628/dwarf_sql/blob/main/1/6)%20Unfinished%20tasks%20count%20by%20profession.sql

7) https://github.com/Makarov628/dwarf_sql/blob/main/1/7)%20Average%20age%20by%20item%20owners.sql

8) https://github.com/Makarov628/dwarf_sql/blob/main/1/8)%20Dwarfs%20with%20no%20items%20and%20by%20greater%20then%20average%20age.sql